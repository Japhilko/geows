knitr::opts_chunk$set(echo = FALSE)
library(xml)
install.packages("xml")
install.packages("XML")
knitr::opts_chunk$set(echo = FALSE)
library(XML)
AMC <- xmlParse("../data/amsterdamCentraal.osm")
AMC
AM <- xmlParse("../data/amsterdam.osm")
xpathApply(AM,"//tag[@k = 'population']")
install.packages(c("DT", "ggmap", "osmar"))
library("osmar")
src <- osmsource_api()
src <- osmsource_api(url = "http://api.openstreetmap.org/api/0.6/")
mannheim <- get_osm(node(240060919))
src <- osmsource_api()
mannheim <- get_osm(node(240060919))
install.packages("cartography")
library(magrittr)
prep_picnames <- function(txt){
ind <- agrep("![]",txt)
pics <- txt[ind]
pics2 <- strsplit(split = "\\(",x=pics)
pics3 <- unlist(lapply(pics2,function(x)ifelse(length(x)==3,x[3],x[2])))
pics3 <- gsub("filepath,\"","",pics3)
pics3 <- gsub("\\)","",pics3)
pics3 <- gsub("\")`)","",pics3)
pics3 <- pics3 %>% strsplit(split = "\\{") %>% lapply(function(x)x[1]) %>% unlist()
ind_https <- agrep("https",pics3)
if (length(ind_https)!=0){
pics3 <- pics3[-ind_https]
}
return(pics3)
}
sysInfo <- Sys.info()
if (sysInfo["nodename"]=="MAL15039"){
new.folder <- "E:/github/geows/slides/"
path_wherepicslive <- "E:/github/GeoData/2017/slides/"
}
new.folder.fig <- paste0(new.folder,"/figure/")
setwd(new.folder)
myfiles <- dir(new.folder) %>% grep(pattern = ".Rmd",value=T)
myfiles
i<-1
myfile <- myfiles[i]
txt <- readLines(myfile)
pics3 <- prep_picnames(txt)
setwd(path_wherepicslive)
file.copy(pics3, new.folder.fig)
install.packages("ggmap")
library(ggmap)
qmap("Mannheim")
?register_google
install.packages("xlsx")
library(knitr)
library(DT)
Ex <- T
library(tmap)
data(Europe)
data(World)
qtm(Europe)
qtm(World)
qtm(World, fill="economy")
qtm(World, fill="gdp_cap_est", text="iso_a3",
text.size="AREA", root=5, fill.title="GDP per capita",
fill.textNA="Non-European countries", theme="Europe")
qtm(World, fill="gdp_cap_est", text="iso_a3",
text.size="AREA", root=5, fill.title="GDP per capita")
data(NLD_prov)
NLD_df <- NLD_prov@data
NLD_df[,6] <- round(NLD_df[,6])
NLD_prov@data
qtm(NLD_prov)
qtm(NLD_prov)
kable(head(NLD_df))
qtm(NLD_prov, fill="population",fill.title="population")
data(NLD_muni)
NLD_df <- NLD_muni@data
kable(NLD_df[,c("name","province","population")])
qtm(NLD_muni, fill="population")
data(land)
info_df <- land@data[1:100,]
land
land$cover
?land
tm_shape(land,  relative=FALSE) +
tm_raster("trees", title="Anteil Waldfläche")
data(metro)
head(metro)
tm_shape(Europe[Europe$name=="Austria", ]) +
tm_polygons()
tm_shape(World[World$name=="Austria", ]) +
tm_polygons()
tm_shape(World) +
tm_fill("part", thres.poly = 0) +
tm_facets("name", free.coords=TRUE)
head(World)
tm_shape(World) +
tm_fill("continent", thres.poly = 0) +
tm_facets("name", free.coords=TRUE)
## Informationen herunterladen
library(tmap)
bb_schloss <- bb(q="Mannheim Schloss")
kable(world)
kable(World)
head(World)
library(magrittr)
prep_picnames <- function(txt){
ind <- agrep("![]",txt)
pics <- txt[ind]
pics2 <- strsplit(split = "\\(",x=pics)
pics3 <- unlist(lapply(pics2,function(x)ifelse(length(x)==3,x[3],x[2])))
pics3 <- gsub("filepath,\"","",pics3)
pics3 <- gsub("\\)","",pics3)
pics3 <- gsub("\")`)","",pics3)
pics3 <- pics3 %>% strsplit(split = "\\{") %>% lapply(function(x)x[1]) %>% unlist()
ind_https <- agrep("https",pics3)
if (length(ind_https)!=0){
pics3 <- pics3[-ind_https]
}
return(pics3)
}
sysInfo <- Sys.info()
if (sysInfo["nodename"]=="MAC14026"){
new.folder <- "D:/github/geows/slides/"
path_wherepicslive <- "D:/github/summerschool_uganda/slides/"
}
if (sysInfo["nodename"]=="MAL15039"){
new.folder <- "E:/github/geows/slides/"
path_wherepicslive <- "E:/github/GeoData/2017/slides/"
}
new.folder.fig <- paste0(new.folder,"/figure/")
setwd(new.folder)
myfiles <- dir(new.folder) %>% grep(pattern = ".Rmd",value=T)
myfiles
i<-2
myfile <- myfiles[i]
myfile
txt <- readLines(myfile)
pics3 <- prep_picnames(txt)
setwd(path_wherepicslive)
file.copy(pics3, new.folder.fig)
path_wherepicslive <- "E:/github/geocourse/slides/"
setwd(path_wherepicslive)
setwd(path_wherepicslive)
file.copy(pics3, new.folder.fig)
qtm(World, fill="part",fill.title="Teil der Welt")
data(NLD_muni)
tm_shape(land,  relative=FALSE) +
tm_raster("trees", title="Anteil Waldfläche")
World$iso_a3
substr(World$iso_a3,1,2)
data(World)
iso_a2<- substr(World$iso_a3,1,2)
i
i<-3
myfile <- myfiles[i]
txt <- readLines(myfile)
myfiles
setwd(new.folder)
setwd(new.folder)
myfiles <- dir(new.folder) %>% grep(pattern = ".Rmd",value=T)
i<-3
myfile <- myfiles[i]
txt <- readLines(myfile)
pics3 <- prep_picnames(txt)
setwd(path_wherepicslive)
file.copy(pics3, new.folder.fig)
knitr::opts_chunk$set(echo = TRUE,cache=T,eval=T,warning=F)
library(knitr)
GESIS <- F
athome <- !GESIS
library(xlsx)
install.packages("xlsx")
install.packages("readxl")
HHsr<-readxl::read_xlsx(paste0(eurostatpath,"HHsavingRate.xls"),1)
setwd(new.folder)
myfiles <- dir(new.folder) %>% grep(pattern = ".Rmd",value=T)
i<-4
myfile <- myfiles[i]
myfile
txt <- readLines(myfile)
pics3 <- prep_picnames(txt)
setwd(path_wherepicslive)
file.copy(pics3, new.folder.fig)
pics3
setwd(new.folder)
myfiles <- dir(new.folder) %>% grep(pattern = ".Rmd",value=T)
i <- length(myfiles)
myfiles
i<-6
myfile <- myfiles[i]
myfile
txt <- readLines(myfile)
pics3 <- prep_picnames(txt)
setwd(path_wherepicslive)
file.copy(pics3, new.folder.fig)
vg250path
setwd("E:/github/fight_corona/data/")
setwd("E:/github/fight_corona/data/")
VG250 <- readOGR ("post_pl.shp","post_pl")
knitr::opts_chunk$set(echo = TRUE,eval=T,warning=F,fig.height=6)
GESIS <- F
athome <- !GESIS
vg250path <- "D:/GESIS/data/vg250_3112.utm32s.shape.ebenen/vg250_ebenen"
library(rgdal)
setwd("E:/github/fight_corona/data/")
VG250 <- readOGR ("post_pl.shp","post_pl")
setwd("E:/github/fight_corona/data/")
VG250 <- readOGR("post_pl.shp","post_pl")
VG250 <- rgdal::readOGR("post_pl.shp","post_pl")
VG250 <- rgdal::readOGR("post_pl.shp")
setwd("E:/github/fight_corona/data/")
VG250 <- rgdal::readOGR("post_pl.shp")
path <- "E:/github/fight_corona/data/"
plz <- rgdal::readOGR(paste0(path,"post_pl.shp"))
spatsamp <- spsample(plz, 100,type="random")
tmp <- sp::over(spatsamp, plz)
head(tmp[,1:6])
tmp <- sp::over(spatsamp, plz)
tmp
head(tmp)
london_sport <- readOGR (paste0(lon_path,"london_sport.shp"))
install.packages("rnaturalearth")
